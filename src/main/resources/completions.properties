# This property file specifies code completions for the GUI editor.
#
# The string specified as key will be replaced with the assigned value.
# An underscore in the value specifies where the cursor will be located.

..=parent::node()
.=self::node()
//=/descendant-or-self::node()/
/=root()
@=attribute
abs=abs(_)
adtt=adjust-date-to-timezone(_)
aev=available-environment-variables(_)
anc=ancestor::
aos=ancestor-or-self::
app=apply(_)
as=analyze-string(_)
attt=adjust-time-to-timezone(_)
avg=avg(_)
bln=boolean(_)
bu=base-uri(_)
cda=current-date(_)
cdt=current-dateTime(_)
ce=codepoint-equal(_)
chl=child::
cll=collection(_)
cln=ceiling(_)
cmp=compare(_)
cnc=concat(_)
ctn=contains(_)
cnt=count(_)
copy=copy $_ := \nmodify \nreturn 
cr=&#xD;
ct=contains text
ctm=current-time(_)
cts=codepoints-to-string(_)
ctt=contains-token(_)
dc=default-collation(_)
doc=doc(_)
dca=doc-available(_)
dcu=document-uri(_)
ddr=days-from-duration(_)
de=deep-equal(_)
delete=delete node _
dfda=day-from-date(_)
dfdt=day-from-dateTime(_)
dns=declare namespace _ = "";
dop=declare option _ = "";
dos=descendant-or-self::
dsc=descendant::
dt=data(_)
dtm=dateTime(_)
dump=prof:dump(_)
dv=distinct-values(_)
efi=encode-for-uri(_)
ehu=escape-html-uri(_)
emp=empty(_)
eo=exactly-one(_)
er=error(_)
ev=environment-variable(_)
ew=ends-with(_)
ewi=element-with-id(_)
exs=exists(_)
fa=function-arity(_)
fda=format-date(_)
fdt=format-dateTime(_)
fe=for-each(_)
fep=for-each-pair(_)
fl=fold-left(_)
flr=floor(_)
fr=fold-right(_)
fls=false(_)
flt=filter(_)
fi=format-integer(_)
fn=format-number(_)
fnl=function-lookup(_)
fnn=function-name(_)
fo=following::
for=for $_ in \nreturn 
fs=following-sibling::
ft=format-time(_)
func=declare function _() {\n  \n};
gi=generate-id(_)
group=group by $_
hc=has-children(_)
hd=head(_)
hfd=hours-from-duration(_)
hfdt=hours-from-dateTime(_)
hft=hours-from-time(_)
id(_)
idr=idref(_)
import=import module namespace _ = "";\n
inb=insert-before(_)
inm=innermost(_)
insert=insert node _ into 
io=index-of(_)
iri=iri-to-uri(_)
isp=in-scope-prefixes(_)
it=implicit-timezone(_)
jd=json-doc(_)
lc=lower-case(_)
let=let $_ := \nreturn 
ln=local-name(_)
lnfq=local-name-from-QName(_)
lng=lang(_)
lst=last(_)
mfd=minutes-from-duration(_)
mfda=month-from-date(_)
mfdt=minutes-from-dateTime(_)
mft=minutes-from-time(_)
mn=min(_)
module=module namespace _ = "";\n
mofd=months-from-duration(_)
mofdt=month-from-dateTime(_)
mt=matches(_)
mx=max(_)
nil=nilled(_)
nl=&#xA;
nm=name(_)
nmb=number(_)
nn=node-name(_)
ns=namespace
nsp=normalize-space(_)
nsu=namespace-uri(_)
nt=not(_)
nu=normalize-unicode(_)
nufp=namespace-uri-for-prefix(_)
nufq=namespace-uri-from-QName(_)
om=outermost(_)
oom=one-or-more(_)
order=order by _
pfq=prefix-from-QName(_)
pid=parse-ietf-date(_)
pj=parse-json(_)
pos=position(_)
prc=preceding::
prn=parent::
ps=preceding-sibling::
pt=put(_)
pth=path(_)
px=parse-xml(_)
pxf=parse-xml-fragment(_)
rename=rename node _ as 
replace value=replace value of node _ with 
replace=replace node _ with 
rhe=round-half-to-even(_)
rmv=remove(_)
rnd=round(_)
rng=random-number-generator(_)
rpl=replace(_)
rq=resolve-QName(_)
rt=root(_)
ru=resolve-uri(_)
rvr=reverse(_)
sa=substring-after(_)
sb=substring-before(_)
sbs=substring(_)
sbu=static-base-uri(_)
sfd=seconds-from-duration(_)
sfdt=seconds-from-dateTime(_)
sft=seconds-from-time(_)
sj=string-join(_)
sl=string-length(_)
sm=sum(_)
some=some $_ in \nsatisfies 
srl=serialize(_)
srt=sort(_)
ss=subsequence(_)
stc=string-to-codepoints(_)
str=string(_)
sw=starts-with(_)
switch=switch(_)\n  case  return \n  default return 
tab=&#x9;
tfda=timezone-from-date(_)
tfdt=timezone-from-dateTime(_)
tft=timezone-from-time(_)
tkn=tokenize(_)
tl=tail(_)
trace=trace(_ , 'Info: ')
trc=trace(_)
trn=translate(_)
tru=true(_)
try=try {\n  _\n} catch * {\n  \n}
typeswitch=typeswitch(_)\n  case  return \n  default return 
uc=upper-case(_)
uo=unordered(_)
upt=unparsed-text(_)
urc=uri-collection(_)
uta=unparsed-text-available(_)
utl=unparsed-text-lines(_)
var=declare variable $_ := ;
yfda=year-from-date(_)
yfdt=year-from-dateTime(_)
yfdu=years-from-duration(_)
zoo=zero-or-one(_)
